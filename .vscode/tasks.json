{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Create virtual environment (Windows)",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "if not exist \"${workspaceFolder}\\venv\" (python -m venv ${workspaceFolder}\\venv)"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Delete venv folder",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "rmdir /s /q ${workspaceFolder}\\venv"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Upgrade pip",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", "--upgrade", "pip"],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Create virtual environment (Windows)"
        },
        {
            "label": "Install requirements",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", "."],
            "problemMatcher": [],
            "dependsOn": "Upgrade pip"
        },
        {
            "label": "Install test requirements",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", ".[test]"],
            "problemMatcher": [],
            "dependsOn": "Install requirements"
        },
        {
            "label": "Install lint requirements",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", ".[lint]"],
            "problemMatcher": [],
            "dependsOn": "Install requirements"
        },
        {
            "label": "Run tests with coverage",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python",
            "args": [
                "-m",
                "coverage",
                "run",
                "-m",
                "unittest",
                "discover",
                "-s",
                "src/tests",
                "-p",
                "test_*.py"
            ],
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "Generate coverage report",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python",
            "args": [
                "-m",
                "coverage",
                "html"
            ],
            "problemMatcher": [],
            "dependsOn": "Run tests with coverage"
        },
        {
            "label": "Open coverage report in browser",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python",
            "args": [
                "-m",
                "webbrowser",
                "file://${workspaceFolder}/htmlcov/index.html"
            ],
            "problemMatcher": [],
            "dependsOn": "Generate coverage report"
        },
        {
            "label": "Copy venv folder - for cleanRebuild",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "xcopy ${workspaceFolder}\\venv ${workspaceFolder}\\venv_backup /E /I /H /Y"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Delete venv folder - for cleanRebuild",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "rmdir /s /q ${workspaceFolder}\\venv"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Copy venv folder - for cleanRebuild"
        },
        {
            "label": "Create virtual environment - for cleanRebuil",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "if not exist \"${workspaceFolder}\\venv\" (python -m venv ${workspaceFolder}\\venv)"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Delete venv folder - for cleanRebuild"
        },
        {
            "label": "Upgrade pip - for cleanRebuild",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", "--upgrade", "pip"],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Create virtual environment - for cleanRebuil"
        },
        {
            "label": "Install requirements - for cleanRebuild",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", "."],
            "problemMatcher": [],
            "dependsOn": "Upgrade pip - for cleanRebuild"
        },
        {
            "label": "Clean rebuild",
            "type": "shell",
            "command": "${workspaceFolder}/venv/Scripts/python.exe",
            "args": ["-m", "pip", "install", ".[test]"],
            "problemMatcher": [],
            "dependsOn": "Install requirements"
        }
    ]
}
